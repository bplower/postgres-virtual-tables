{
	"info": {
		"name": "Vtable Server",
		"_postman_id": "40748b48-62e0-af78-565f-48aa6b25886c",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Manage: List tables",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('No existing virtual tables', function() {",
							"    pm.response.to.be.json;",
							"    var json_data = pm.response.json();",
							"    pm.expect(json_data.success).to.be.true;",
							"    pm.expect(json_data.response.length).to.eql(0);",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Create foobar",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Only have 1 vtable', function() {",
							"    pm.response.to.be.json;",
							"    var json_data = pm.response.json();",
							"    pm.expect(json_data.success).to.be.true;",
							"    pm.expect(json_data.response.table_name).to.eql(\"foobar\");",
							"    pm.globals.set(\"foobar_table_id\", json_data.response.id);",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"foobar\"\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Get foobar table",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"foo\": \"bar\"\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables/{{foobar_table_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables",
						"{{foobar_table_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Update foobar table name",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"foobarbaz\"\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables/{{foobar_table_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables",
						"{{foobar_table_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Create foobarbaz column 'foo'",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})",
							"",
							"pm.test('Create the foo column', function() {",
							"    pm.response.to.be.json;",
							"    var json_data = pm.response.json();",
							"    pm.expect(json_data.success).to.be.true;",
							"    pm.expect(json_data.response.column_name).to.eql(\"foo\");",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"foo\",\n\t\"type\": \"text\",\n\t\"position\": 3\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables/{{foobar_table_id}}/columns",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables",
						"{{foobar_table_id}}",
						"columns"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Create foobarbaz column 'bar'",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Create the foo column and register its ID', function() {",
							"    pm.response.to.be.json;",
							"    var json_data = pm.response.json();",
							"    pm.expect(json_data.success).to.be.true;",
							"    pm.expect(json_data.response.column_name).to.eql(\"bar\");",
							"    pm.globals.set(\"bar_column_id\", json_data.response.id);",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"bar\",\n\t\"type\": \"text\",\n\t\"position\": 3\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables/{{foobar_table_id}}/columns",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables",
						"{{foobar_table_id}}",
						"columns"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Get foobarbaz columns",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Only have 1 vtable', function() {",
							"    pm.response.to.be.json;",
							"    var json_data = pm.response.json();",
							"    pm.expect(json_data.success).to.be.true;",
							"    pm.expect(json_data.response.length).to.eql(2);",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables/{{foobar_table_id}}/columns",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables",
						"{{foobar_table_id}}",
						"columns"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Get foobarbaz column 'bar'",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"foo\": \"bar\"\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables/{{foobar_table_id}}/columns/{{bar_column_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables",
						"{{foobar_table_id}}",
						"columns",
						"{{bar_column_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Update foobarbaz column 'bar' to 'baz'",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"foo\": \"bar\"\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables/{{foobar_table_id}}/columns/{{bar_column_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables",
						"{{foobar_table_id}}",
						"columns",
						"{{bar_column_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Access: Create foobarbaz row 'qux'",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})",
							"",
							"pm.test('Create new row', function() {",
							"    pm.response.to.be.json;",
							"    var json_data = pm.response.json();",
							"    pm.expect(json_data.success).to.be.true;",
							"    pm.expect(json_data.response.foo).to.eql(\"qux\");",
							"    pm.expect(json_data.response.bar).to.eql(\"quux\");",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"foo\": \"qux\",\n\t\"bar\": \"quux\"\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/access/{{foobar_table_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"access",
						"{{foobar_table_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Access: Create foobarbaz row 'corge'",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Verify corge record was created', function() {",
							"    pm.response.to.be.json;",
							"    var json_data = pm.response.json();",
							"    pm.expect(json_data.success).to.be.true;",
							"    pm.expect(json_data.response.foo).to.eql(\"corge\");",
							"    pm.globals.set(\"corge_row_id\", json_data.response.id);",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"foo\": \"corge\",\n\t\"bar\": \"grault\"\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/access/{{foobar_table_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"access",
						"{{foobar_table_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Access: Get foobarbaz rows",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/access/{{foobar_table_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"access",
						"{{foobar_table_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Delete foobarbaz column 'bar'",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables/{{foobar_table_id}}/columns/{{bar_column_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables",
						"{{foobar_table_id}}",
						"columns",
						"{{bar_column_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Access: Get foobarbaz row 'corge' (verify column gone)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"foo\": \"bar\"\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/access/{{foobar_table_id}}/{{corge_row_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"access",
						"{{foobar_table_id}}",
						"{{corge_row_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Access: Update foobarbaz row 'corge' value",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"foo\": \"bar\"\n}"
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/access/{{foobar_table_id}}/{{corge_row_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"access",
						"{{foobar_table_id}}",
						"{{corge_row_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Access: Delete foobarbaz row 'corge'",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/access/{{foobar_table_id}}/{{corge_row_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"access",
						"{{foobar_table_id}}",
						"{{corge_row_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Access: Get foobarbaz rows (verify after delete)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/access/{{foobar_table_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"access",
						"{{foobar_table_id}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Manage: Delete foobarbaz table",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Test response is okay', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:{{port}}/api/manage/tables/{{foobar_table_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"manage",
						"tables",
						"{{foobar_table_id}}"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}